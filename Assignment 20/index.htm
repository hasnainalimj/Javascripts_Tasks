<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Document</title>
</head>

<body>

    <script>

        //Q1: I want this code to log out "hey amy", but it logs out "hey arnold" - why?

        /*function greet(person) {
            if (person == { name: 'amy' }) { // this line is must be corrected
                return 'hey amy'
            } else {
                return 'hey arnold'
            }
        }
        greet({ name: 'amy' })*/

       //ANSWER

        function greet(person2) {
            if (person2.name == 'amy2') {
                console.log('hey amy2');
            } else {
                console.log('hey arnold');
            }
        }
        greet({ name: 'amy2' });

        //Q2: I want this code to log out the numbers 0, 1, 2, 3 in that order, but it doesnâ€™t do what I expect (this is a bug you run into once in a while, and some people love to ask about it in interviews).
        /*for (var i = 0; i < 4; i++) {
            setTimeout(() => console.log(i), 0)
        }*/

        //ANSWER

        function theSetTimeout() {
            setTimeout(() => console.log(i), 0);
        }
        for (var i = 0; i < 4; ++i) {
            theSetTimeout(i)
        };

        //Q3: I want this code to log out "doggo", but it logs out undefined!
        /*var dog = {
            name: 'doggo',
            sayName() {
                console.log(this.name)
            }
        }
        var sayName = dog.sayName
        sayName()*/


        //ANSWER

        var dog = {
            name: 'doggo',
            sayName() {
                console.log(this.name)
            }
        }
        var sayName = dog.sayName
        dog.sayName()
        
        //Q4: I want my dog to bark(), but instead I get an error. Why?
        
        /*function Dog(name) {
            this.name = name
        }
        Dog.bark = function () {
            console.log(this.name + ' says woof')
        }
        let fido = new Dog('fido')
        fido.bark()*/

        //ANSWER

        function Dog(name) {
            this.name = name
        }

        Dog.prototype.bark = function () {
            console.log(this.name + ' says woof')
        }

        let puppy = new Dog('moti')
        puppy.bark();

        //Q5: Why does this code return the results that it does?
        
        /*function isBig(thing) {
            if (thing == 0 || thing == 1 || thing == 2) {
                return false
            }
            return true
        }
        isBig(1) // false
        isBig([2]) // false
        isBig([3]) // true*/

        //Q6: How to preserve the immutability on my heroes list?

        var heroes = [
            { name: 'Wolverine', family: 'Marvel', isEvil: false },
            { name: 'Deadpool', family: 'Marvel', isEvil: false },
            { name: 'Magneto', family: 'Marvel', isEvil: true },
            { name: 'Charles Xavier', family: 'Marvel', isEvil: false },
            { name: 'Batman', family: 'DC Comics', isEvil: false },
            { name: 'Harley Quinn', family: 'DC Comics', isEvil: true },
            { name: 'Legolas', family: 'Tolkien', isEvil: false },
            { name: 'Gandalf', family: 'Tolkien', isEvil: false },
            { name: 'Saruman', family: 'Tolkien', isEvil: true }
        ]

        var body = document.getElementById('body');
        var h1 = document.createElement('h1');
        h1.innerHTML = "Assignment 20 Part 6";
        var button = document.createElement('button');
        button.innerHTML = "Click";
        button.setAttribute("onclick", "show()");
        body.appendChild(h1);
        body.appendChild(button);
        function show() {
            for (var i = 0; i < heroes.length; i++) {

                heroes[i].name = heroes[i].name.toLocaleUpperCase();
            }
            console.log(heroes);
        }
        console.log(heroes);

    </script>

</body>

</html>